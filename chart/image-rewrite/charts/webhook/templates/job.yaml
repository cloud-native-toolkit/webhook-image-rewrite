apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "webhook.jobName" . }}
  namespace: {{ .Release.Namespace }}
spec:
  template:
    spec:
      serviceAccountName: {{ include "webhook.jobServiceAccountName" . }}
      volumes:
        - name: cert-dir
          emptyDir: {}
        - name: scripts
          configMap:
            name: {{ include "webhook.certScriptsName" . }}
            defaultMode: 0777
      initContainers:
        - name: create-csr
          image: {{ printf "%s:%s" .Values.job.repository .Values.job.tag }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SERVICE
              value: {{ include "webhook.fullname" . }}
            - name: CERT_DIR
              value: /opt/certs
          command: ["/opt/bin/create-csr.sh"]
          volumeMounts:
            - mountPath: /opt/certs
              name: cert-dir
            - mountPath: /opt/bin
              name: scripts
        {{- if .Values.job.autoApproveCsr }}
        - name: approve-csr
          image: {{ printf "%s:%s" .Values.job.repository .Values.job.tag }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SERVICE
              value: {{ include "webhook.fullname" . }}
          command: ["/opt/bin/approve-csr.sh"]
          volumeMounts:
            - mountPath: /opt/bin
              name: scripts
        {{- end }}
        - name: wait-for-csr
          image: {{ printf "%s:%s" .Values.job.repository .Values.job.tag }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SERVICE
              value: {{ include "webhook.fullname" . }}
          command: ["/opt/bin/wait-for-csr.sh"]
          volumeMounts:
            - mountPath: /opt/bin
              name: scripts
      containers:
        - name: create-cert-secret
          image: {{ printf "%s:%s" .Values.job.repository .Values.job.tag }}
          command: ["/opt/bin/create-secret.sh"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SERVICE
              value: {{ include "webhook.fullname" . }}
            - name: SECRET_NAME
              value: {{ include "webhook.secretName" . }}
            - name: CERT_DIR
              value: /opt/certs
          volumeMounts:
            - mountPath: /opt/certs
              name: cert-dir
            - mountPath: /opt/bin
              name: scripts
      restartPolicy: Never
  backoffLimit: 4
